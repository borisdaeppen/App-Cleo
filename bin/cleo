#!/usr/bin/env perl

use strict;
use warnings;
use App::Cleo;

my $cleo = App::Cleo->new;
$cleo->run([<DATA>]);

#-----------------------------------------------------------------------------

__DATA__

# Set up
# !!perlbrew use perl-5.16.3
# !!perlbrew lib delete perl-5.16.3@demo
# !!perlbrew lib create perl-5.16.3@demo
# !!exit

!!perlbrew use perl-5.16.3@demo

!!rm -rf MyModules
# !!rm -rf ~/opt/local/pinto/lib/perl5/HTTP*
# !!rm -rf ~/opt/local/pinto/lib/perl5/URI.pm
# !!rm -rf ~/opt/local/pinto/lib/perl5/Pinto*
# !!rm -rf ~/opt/local/pinto/lib/perl5/darwin-2level/auto/Pinto
!!export PERL_CPANM_OPT=--notest
echo 'Here we go!'; clear

# Install pinto
# curl -L http://getpinto.stratopan.com | bash

# Create repository
pinto %%%--root MyModules %%%init %%%--source file:///Users/jeff/tmp/CPAN-Today

# Show repository structure
find MyModules -type f

# Set ENV var, so we can be lazy
export PINTO_REPOSITORY_ROOT=$PWD/MyModules

# Pull Dancer from CPAN and install
pinto install%%% --do-pull%%% Dancer

# Show stack contents
pinto list
clear

# URI is broken so inject our patched one
pinto add%%% ~/tmp/URI-1.58_PATCHED.tar.gz

# Pin our URI so it doesn't change
pinto pin%%% URI

# Edit config file to travel forward in time
(exec < /dev/tty vim MyModules/.pinto/config/pinto.ini)

# Pull newer Dancer and install
pinto install --do-pull Dancer%%%~1.3116

# Show log to explain the pin
pinto log

# Make a copy of the stack
pinto copy%%% master foo

# Show the stack listing
pinto stacks

# Unpin URI on the copied stack
pinto unpin%%% --stack foo%%% URI

# Upgrade Dancer
pinto install --do-pull --stack foo%%% Dancer~1.3116

# Compare the stacks
pinto diff%%% master foo

# Unpin URI on master too
pinto unpin URI

# Pull Dancer to master
pinto pull Dancer~1.3116

# Compare stacks again
pinto diff master foo

# The end
echo 'Thank You!'
exit
